{"version":3,"sources":["movies/MovieList.js","movies/action.js","movies/Movie.js","movies/MovieDetail.js","toggle/action.js","toggle/reducer.js","movies/reducer.js","rootReducer.js","toggle/Toggle1.js","movies/ToggleMovies.js","App.js","ReactAppSam1.js","serviceWorker.js","index.js"],"names":["MovieList","_ref","movie","react_default","a","createElement","Hover","Link","to","concat","id","Poster","src","poster_path","alt","title","styled","img","_templateObject","div","_templateObject2","getMovies","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","res","movielist","wrap","_context","prev","next","fetch","sent","json","abrupt","type","data","results","stop","this","_x","apply","arguments","getMovie","_ref2","_callee2","_context2","_x2","resetMovie","Movie","_this$props","props","isLoaded","moviesLoadedAt","Date","_this$props2","movies","MovieGrid","map","movies_MovieList","key","desc","overview","PureComponent","connect","state","moviedata","moviesLoaded","bindActionCreators","Movie_templateObject","MovieDetail","match","params","MovieWrapper","backdrop","backdrop_path","MovieInfo","release_date","Component","movieLoaded","MovieDetail_templateObject","MovieDetail_templateObject2","toggleMessage","initialState","messageVisibility","rootReducer","combineReducers","toggle","length","undefined","objectSpread","action","onClick","middleware","logger","thunk","store","createStore","load","composeWithDevTools","applyMiddleware","save","App","es","BrowserRouter","className","Toggle1","ToggleMovies","Switch","Route","exact","path","component","defaultState","welcome","otherstate","otherstates","name","console","log","getState","name2","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6dc2e850.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\nconst POSTER_PATH = 'http://image.tmdb.org/t/p/w154'\r\n\r\nconst MovieList = ({ movie }) => (\r\n    <div>\r\n        <Hover>\r\n            <Link to={`/${movie.id}`} >\r\n                <Poster src={`${POSTER_PATH}${movie.poster_path}`}\r\n                    alt={movie.title} />\r\n            </Link>\r\n        </Hover>\r\n        <h3>{movie.title}</h3>\r\n    </div>\r\n)\r\n\r\nexport default MovieList;\r\n\r\nMovieList.propTypes = {\r\n    movie: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n    }).isRequired\r\n}\r\n\r\nexport const Poster = styled.img`\r\n    box-shadow:  0 0 35px black;\r\n    border: 2px solid black\r\n`;\r\n\r\nconst Hover = styled.div`\r\n&:hover{\r\n    transform: scale(1.2);\r\n};\r\n`;","export const GET_MOVIES = 'GET_MOVIES'\r\nexport const GET_MOVIE = 'GET_MOVIE'\r\nexport const RESET_MOVIE = 'RESET_MOVIE'\r\n\r\nexport function getMovies() {\r\n    return async function (dispatch) {\r\n        const res = await fetch('https://api.themoviedb.org/3/discover/movie?api_key=65e043c24785898be00b4abc12fcdaae&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1')\r\n        const movielist = await res.json();\r\n        return dispatch({\r\n            type: 'GET_MOVIES',\r\n            data: movielist.results,\r\n        });\r\n    };\r\n}\r\n\r\nexport function getMovie(id) {\r\n    return async function (dispatch) {\r\n        const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=65e043c24785898be00b4abc12fcdaae`)\r\n        const movie = await res.json();\r\n        return dispatch({\r\n            type: 'GET_MOVIE',\r\n            data: movie,\r\n        });\r\n    };\r\n}\r\n\r\nexport function resetMovie() {\r\n    return {\r\n        type: 'RESET_MOVIE',\r\n    };\r\n}","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport MovieList from './MovieList'\r\nimport styled from 'styled-components'\r\nimport { getMovies } from './action'\r\n\r\nclass Movie extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        const { getMovies, isLoaded, moviesLoadedAt } = this.props;\r\n        const oneHour = 60 * 60 * 1000;\r\n        if (!isLoaded || ((new Date()) - new Date(moviesLoadedAt)) > oneHour) {\r\n            getMovies();\r\n        }\r\n    }\r\n\r\n    // state = {\r\n    //     movielist: []\r\n    // }\r\n\r\n    // async componentDidMount() {\r\n\r\n    //     try {\r\n    //         const res = await fetch('https://api.themoviedb.org/3/discover/movie?api_key=65e043c24785898be00b4abc12fcdaae&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1')\r\n    //         const movielist = await res.json();\r\n    //         this.setState({\r\n    //             movielist: movielist.results,\r\n    //         })\r\n    //     } catch (e) {\r\n    //         console.log(e)\r\n    //     }\r\n    // }\r\n\r\n    // render() {\r\n    //     return (\r\n    //         <MovieGrid>\r\n    //             {this.state.movielist.map(movie =>\r\n    //                 <MovieList key={movie.id}\r\n    //                     movie={movie}\r\n    //                     desc={movie.overview}\r\n    //                 />)}\r\n    //         </MovieGrid>\r\n\r\n    //     );\r\n    // }\r\n\r\n    render() {\r\n        const { movies, isLoaded } = this.props;\r\n        if(!isLoaded) return <h1>Loading...</h1>\r\n        return (\r\n            <MovieGrid>\r\n                {movies.map(movie =>\r\n                    <MovieList key={movie.id}\r\n                        movie={movie}\r\n                        desc={movie.overview}\r\n                    />)}\r\n            </MovieGrid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.moviedata.movies,\r\n    isLoaded: state.moviedata.moviesLoaded,\r\n    moviesLoadedAt: state.moviedata.moviesLoadedAt,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getMovies,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\r\n\r\nconst MovieGrid = styled.div`\r\n    display: grid;\r\n    padding: 1rem;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    grid-row-gap: 1rem;\r\n`;","import React, { Component } from 'react';\r\nimport { Poster } from './MovieList'\r\nimport styled from 'styled-components'\r\n\r\nimport { getMovie, resetMovie } from './action';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\n\r\nconst POSTER_PATH = 'http://image.tmdb.org/t/p/w154'\r\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/w1280'\r\n\r\nclass MovieDetail extends Component {\r\n\r\n    componentDidMount() {\r\n        const { getMovie, match } = this.props;\r\n        getMovie(match.params.id);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetMovie();\r\n    }\r\n\r\n    // async componentDidMount() {\r\n    //     try {\r\n    //         const res = await fetch(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=65e043c24785898be00b4abc12fcdaae`)\r\n    //         const movie = await res.json();\r\n    //         this.setState({\r\n    //             movie,\r\n    //         })\r\n    //     } catch (e) {\r\n    //         console.log(e)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        const { movie } = this.props\r\n        if (!movie.id) return null;\r\n\r\n        return (\r\n\r\n            <MovieWrapper backdrop={`${BACKDROP_PATH}${movie.backdrop_path}`}>\r\n                <MovieInfo>\r\n                    <Poster src={`${POSTER_PATH}${movie.poster_path}`} />\r\n                    <div>\r\n                        <h1>{movie.title}</h1>\r\n                        <h3>{movie.release_date}</h3>\r\n                        <p>{movie.overview}</p>\r\n                    </div>\r\n                </MovieInfo>\r\n            </MovieWrapper>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    movie: state.moviedata.movie,\r\n    isLoaded: state.moviedata.movieLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getMovie,\r\n    resetMovie,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetail);\r\n\r\nconst MovieWrapper = styled.div`\r\n    position: relative;\r\n    padding-top: 50vh;\r\n    background: url(${props => props.backdrop}) no-repeat;\r\n    background-size: cover;\r\n`;\r\n\r\nconst MovieInfo = styled.div`\r\n    background: white;\r\n    text-align: left;\r\n    padding: 2rem 10%;\r\n    display: flex;\r\n    >div {\r\n        margin-left: 20px;\r\n    }\r\n    img {\r\n        position: relative;\r\n        top: -5rem;\r\n    }\r\n`;","export const TOGGLE_MESSAGE = 'TOGGLE_MESSAGE'\r\n\r\nexport function toggleMessage() {\r\n    return {\r\n        type: 'TOGGLE_MESSAGE',\r\n    }\r\n}","import { TOGGLE_MESSAGE } from './action'\r\n\r\nconst initialState = {\r\n    messageVisibility: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type } = action;\r\n    switch (type) {\r\n        case TOGGLE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messageVisibility: !state.messageVisibility,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_MOVIES, GET_MOVIE, RESET_MOVIE } from './action'\r\n\r\nconst initialState = {\r\n    movies: [],\r\n    moviesLoaded: false,\r\n    moviesLoadedAt: null,\r\n    movie: {},\r\n    movieLoaded: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    const { type, data } = action;\r\n    switch (type) {\r\n        case GET_MOVIES:\r\n            return {\r\n                ...state,\r\n                movies: data,\r\n                moviesLoaded: true,\r\n                moviesLoadedAt: new Date(),\r\n            };\r\n        case GET_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: data,\r\n                movieLoaded: true,\r\n            };\r\n        case RESET_MOVIE:\r\n            return {\r\n                ...state,\r\n                movie: {},\r\n                movieLoaded: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\n\r\nimport toggle from './toggle/reducer'\r\nimport moviedata from './movies/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    toggle,\r\n    moviedata,\r\n});\r\n\r\nexport default rootReducer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { toggleMessage } from './action'\r\n\r\nconst Toggle = ({ messageVisibility, toggleMessage }) => (\r\n    <div>\r\n        {messageVisibility &&\r\n            <p> You will be seeing this if redux action is toggled</p>\r\n        }\r\n        <button onClick={toggleMessage}>Toggle Me</button>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    messageVisibility: state.toggle.messageVisibility,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    toggleMessage,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toggle);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { bindActionCreators } from 'redux';\r\n\r\nimport { getMovies } from '../movies/action'\r\n\r\nconst Toggle = ({ getMovies }) => (\r\n    <div>\r\n        <button onClick={getMovies}>Load Movies</button>\r\n    </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    movies: state.moviedata.movies,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({\r\n    getMovies,\r\n}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Toggle);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch\r\n} from 'react-router-dom'\r\nimport Movie from './movies/Movie'\r\nimport MovieDetail from './movies/MovieDetail'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { save, load } from 'redux-localstorage-simple'\r\nimport rootReducer from './rootReducer'\r\n\r\nimport Toggle from './toggle/Toggle1'\r\nimport ToggleMovies from './movies/ToggleMovies'\r\n\r\nconst middleware = [logger, thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  load(),\r\n  composeWithDevTools(applyMiddleware(...middleware, save())),\r\n);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Toggle />\r\n            <ToggleMovies />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Movie} />\r\n              <Route exact path=\"/:id\" component={MovieDetail} />\r\n            </Switch>\r\n          </div>\r\n\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { createStore } from 'redux';\r\n\r\nconst defaultState = {\r\n    welcome: 'Hi defaulte state',\r\n    otherstate: 'some stuff',\r\n    otherstates: 'some other stuff'\r\n}\r\n\r\nconst greeting = (state = defaultState, action) => {\r\n   \r\n    switch(action.type){\r\n        case 'GREET_ME':\r\n            return { ...state, welcome: `hello` }\r\n        case 'GREET_NAME':\r\n            return { ...state, welcome: `Hello ${action.name}`};\r\n        case 'HI_ALL':\r\n            return { ...state, welcome: `HEllo All`};\r\n        default:\r\n           return state;\r\n    }\r\n};\r\n\r\nconst store = createStore(greeting)\r\nconsole.log(store.getState())\r\n\r\nconst name = 'this is the data coming fromapi'\r\nconst name2 = 'this is another data coming fromapi'\r\n\r\nstore.dispatch({\r\n    type: 'GREET_NAME',\r\n    name,\r\n    name2\r\n})\r\n\r\nconsole .log(store.getState())\r\n\r\nstore.dispatch({\r\n    type: 'GREET_NAME',\r\n    name: 'somename'\r\n})\r\n\r\nconsole.log(store.getState())\r\n\r\nstore.dispatch({\r\n    type: 'GREET_ME',\r\n    welcome: 'Good Morning'\r\n})\r\n\r\nconsole.log(\"***** : \",store.getState())\r\n\r\nclass ReactAppSam1 extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Wecome to redux</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReactAppSam1;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactApp from './ReactAppSam1'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}